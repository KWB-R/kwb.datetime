% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/convert.R
\name{hsToPosix}
\alias{hsToPosix}
\title{Conversion to POSIXt}
\usage{
hsToPosix(datetime, keepTZ = is.null(tzone), tzone = NULL, lt = FALSE,
  ...)
}
\arguments{
\item{datetime}{object of class POSIXt or Date or character representing date
(and time) information to be converted to class POSIXct.}

\item{keepTZ}{if \code{TRUE} and if the given object is already of
POSIX-type, the returned POSIXct object will be in the same time zone as
the original object. Otherwise POSIX-objects will be returned in the time
zone \emph{tzone}.}

\item{tzone}{time zone. Will be set to \dQuote{UTC} if missing. UTC it the
preferred time zone as it seems that only UTC prevents the POSIXt-classes
from applying daylight-savings time.}

\item{lt}{if TRUE a POSIXlt object is returned instead of a POSIXct object.}

\item{\dots}{further arguments to be passed to as.POSIXct/as.POSIXlt, e.g.
format, help for as.POSIXct/as.POSIXlt.}
}
\description{
Converts an object representing a date (and if applicable a time) into an 
object of class POSIXct. Supported input classes are character, Date and 
POSIXt.
}
\details{
If \emph{datetime} is already of class POSIXlt or POSIXct the time
  zone is preserved unless \emph{keepTZ} is FALSE. If \emph{datetime} is a
  character string it is expected to be in ISO format: \dQuote{yyyy-mm-dd
  [HH:MM:SS]} where the time-part in brackets is optional.
}
\examples{
# Start with a string representing a timestamp
datetime <- "2011-01-02 12:34:56"
  
# By default hsToPosix creates a POSIXct object:
ct <- hsToPosix(datetime)
class(ct) # "POSIXct" "POSIXt"
  
# You may decide to create a POSIXlt object instead:
lt <- hsToPosix(datetime, lt = TRUE)
class(lt) # "POSIXlt" "POSIXt"
  
# With a POSIXlt object you can access the different parts of the timestamp
sprintf("\%d hours, \%d minutes, \%d seconds", lt$hour, lt$min, lt$sec)
  
capture.output(str(lt))

attributes(lt)

# These are all available pieces of information 
# (isdst = is daylight savings time in effect)
sapply(attr(lt, "names"), function(part) {
  if (part %in% names(lt)) lt[[part]] else cat("No such element:", part, "\n")
)}
  
# You may use hsToPosix to convert between lt and ct
identical(hsToPosix(ct, lt = TRUE), lt)
identical(hsToPosix(lt, lt = FALSE), ct)
  
# The following time does not exist in CET/CEST but in UTC 
# as it is the time when daylight-savings time switched.
hsToPosix("2011-03-27 02:00:00") # "2011-03-27 02:00:00 UTC"
  
# Compare with as.POSIXct: between 02:00:00 and 02:59:59 the 
# time information gets lost and is only recognized again 
# from 03:00:00 on. Similar results with as.POSIXlt.
as.POSIXlt("2011-03-27 01:59:59") # "2011-03-27 01:59:59"
as.POSIXlt("2011-03-27 02:00:00") # "2011-03-27"
as.POSIXlt("2011-03-27 02:59:59") # "2011-03-27"
as.POSIXlt("2011-03-27 03:00:00") # "2011-03-27 03:00:00"  
  
# When loading data from an Access table it will be of class
# POSIXct:
#dat <- hsGetTable(xmdb(), "tbl_Hyd")
#class(dat$Zeitst) # "POSIXct" "POSIXt"
  
# In order to prevent R from considering daylight savings time
# we should convert to UTC time zone. But then we have to keep
# in mind that the indication "UTC" is not correct as the time
# stamps in fact represent the time zone "UTC+1"!
#head(dat$Zeitst) 
# "2011-08-23 00:00:00 CEST" "2011-08-23 00:01:00 CEST" ...
  
#head(hsToPosix(dat$Zeitst))  
# "2011-08-23 00:00:00 UTC" "2011-08-23 00:01:00 UTC" ...

}
