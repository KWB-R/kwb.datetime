% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/textToEuropeBerlinPosix.R
\name{textToEuropeBerlinPosix}
\alias{textToEuropeBerlinPosix}
\title{Convert Text Timestamps to POSIXct Objects}
\usage{
textToEuropeBerlinPosix(x, format = NULL, switches = TRUE,
  dbg = TRUE, ...)
}
\arguments{
\item{x}{vector of text (i.e. character) timestamps}

\item{format}{format string describing the format of a timestamp, such as
"%Y-%m-%d %H:%M:%S", see \code{\link{strftime}} for further percentage sign
placeholders. If not given or \code{NULL}, the function tries to guess the
format from the first timestamp given in \code{x}.}

\item{switches}{if \code{TRUE} (the default), the timestamps are assumed to
originate from a clock that switches between standard time and summer time.
Otherwise (\code{switches = FALSE}) timestamps are assumed to originate 
from a clock that stays in standard time over the whole year.}

\item{dbg}{if \code{TRUE} debug messages are shown}

\item{\dots}{further arguments passed to \code{\link{reformatTimestamp}}
(only relevant if \code{switches = TRUE})}
}
\value{
vector of POSIXct objects
}
\description{
This function tries to overcome some problems that may arise when using
\code{\link{as.POSIXct}}. It can handle timestamps that originate from a 
clock that switches between standard time and summer time as well as those 
originating from a clock that stays in standard time over the whole year.  
See \code{vignette("text_to_posixct", package = "kwb.datetime")} for details.
It also tries to find a convenient format description string.
}
\details{
When reading timestamps that observe Daylight Saving, it is required  that 
the timestamps in \code{x} are ordered by time, which should be the case if 
they  were recorded by a measuring device.
}
\examples{
# Test the functions with the following "switch" days
kwb.datetime::date_range_CEST(2019)

t1 <- textToEuropeBerlinPosix(c("31.03.2019 01:00", "31.03.2019 03:00"))
t2 <- textToEuropeBerlinPosix(c("31.03.2019 01:00", "31.03.2019 02:00"), 
                              switches = FALSE)
identical(t1, t2)
                              
t3 <- textToEuropeBerlinPosix(c("27.10.2019 02:00", "27.10.2019 02:00"))
t4 <- textToEuropeBerlinPosix(c("27.10.2019 01:00", "27.10.2019 02:00"), 
                              switches = FALSE)
identical(t3, t4)

kwb.datetime::textToEuropeBerlinPosix(c(
  "2017-10-29 01:30:00", # 1: CEST
  "2017-10-29 02:00:00", # 2: CEST
  "2017-10-29 02:30:00", # 3: CEST
  "2017-10-29 02:00:00", # 4: CET
  "2017-10-29 02:30:00", # 5: CET
  "2017-10-29 03:00:00"  # 6: CET
))

}
